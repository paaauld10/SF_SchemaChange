name: Run Python Script

on:
  issues:
    types: [opened]

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract Inputs from Issue Body
      id: extract_inputs
      run: |
        echo "Extracting inputs from issue body..."

        ISSUE_BODY="${{ github.event.issue.body }}"

        # Extract Feature Branch
        FEATURE_BRANCH=$(echo "$ISSUE_BODY" | awk '/### Feature Branch/{getline; print}')
        echo "Extracted Feature Branch: $FEATURE_BRANCH"
        echo "feature_branch=$FEATURE_BRANCH" >> $GITHUB_ENV

        # Extract Database Name
        DB_SFNAME=$(echo "$ISSUE_BODY" | awk '/### Database Name/{getline; print}')
        echo "Extracted Database Name: $DB_SFNAME"
        echo "db_sfname=$DB_SFNAME" >> $GITHUB_ENV

        # Extract Schema Name
        SCHEMA_SFNAME=$(echo "$ISSUE_BODY" | awk '/### Schema Name/{getline; print}')
        echo "Extracted Schema Name: $SCHEMA_SFNAME"
        echo "schema_sfname=$SCHEMA_SFNAME" >> $GITHUB_ENV

    - name: Debug Extracted Variables
      run: |
        echo "Feature Branch: ${{ env.feature_branch }}"
        echo "Database Name: ${{ env.db_sfname }}"
        echo "Schema Name: ${{ env.schema_sfname }}"

        if [ -z "${{ env.feature_branch }}" ]; then
          echo "❌ Error: Feature branch is empty!"
          exit 1
        fi

    - name: Checkout Feature Branch
      run: |
        git fetch origin
        git checkout ${{ env.feature_branch }} || (echo "❌ Error: Branch does not exist!" && exit 1)

    - name: Print Current Branch
      run: |
        echo "✅ Successfully checked out branch: $(git branch --show-current)"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt || echo "⚠️ No requirements.txt found, skipping installation."

    - name: Run Python script
      run: |
        python .github/workflows/main.py
      env:
        DB_SFNAME: ${{ env.db_sfname }}
        SCHEMA_SFNAME: ${{ env.schema_sfname }}
        FILE_LOC: ${{ env.file_loc }}

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Commit Changes
      run: |
        git add snowflake/conversion
        git commit -m "Rename and update SQL files"

    - name: Push Changes
      run: |
        git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git ${{ env.feature_branch }}
